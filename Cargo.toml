[workspace.package]
edition = "2021"
version = "2.0.0-pre-rc.21"
# TODO: teams are being deprecated update the authors URL
authors = ["Iroha 2 team <https://github.com/orgs/soramitsu/teams/iroha2>"]

description = "Efficient, simple, Byzantine-fault-tolerant DLT inspired by the Kaizen principle"
repository = "https://github.com/hyperledger/iroha/tree/iroha2-lts"
documentation = "https://hyperledger.github.io/iroha-2-docs"
homepage = "https://iroha.tech"

license = "Apache-2.0"
keywords = ["blockchain", "crypto", "iroha", "ledger"]
categories = ["cryptography::cryptocurrencies"]

[workspace.dependencies]
iroha = { path = "cli" }
iroha_torii = { version = "=2.0.0-pre-rc.21", path = "torii" }
iroha_torii_derive = { version = "=2.0.0-pre-rc.21", path = "torii/derive" }
iroha_torii_const = { version = "=2.0.0-pre-rc.21", path = "torii/const" }
iroha_macro_utils = { version = "=2.0.0-pre-rc.21", path = "macro/utils" }
iroha_telemetry = { version = "=2.0.0-pre-rc.21", path = "telemetry" }
iroha_telemetry_derive = { version = "=2.0.0-pre-rc.21", path = "telemetry/derive" }
iroha_p2p = { version = "=2.0.0-pre-rc.21", path = "p2p" }
iroha_core = { version = "=2.0.0-pre-rc.21 ", path = "core" }
iroha_primitives = { version = "=2.0.0-pre-rc.21", path = "primitives", default-features = false }
iroha_primitives_derive = { version = "=2.0.0-pre-rc.21", path = "primitives/derive" }
iroha_data_model = { version = "=2.0.0-pre-rc.21", path = "data_model", default-features = false }
iroha_data_model_derive = { version = "=2.0.0-pre-rc.21", path = "data_model/derive" }
iroha_client = { version = "=2.0.0-pre-rc.21", path = "client" }
iroha_config = { version = "=2.0.0-pre-rc.21", path = "config" }
iroha_config_base = { version = "=2.0.0-pre-rc.21", path = "config/base" }
iroha_sample_params = { version = "=2.0.0-pre-rc.21", path = "sample_params", default-features = false }
iroha_schema_gen = { version = "=2.0.0-pre-rc.21", path = "schema/gen" }
iroha_schema = { version = "=2.0.0-pre-rc.21", path = "schema", default-features = false }
iroha_schema_derive = { version = "=2.0.0-pre-rc.21", path = "schema/derive" }
iroha_logger = { version = "=2.0.0-pre-rc.21", path = "logger" }
iroha_crypto = { version = "=2.0.0-pre-rc.21", path = "crypto", default-features = false }
iroha_macro = { version = "=2.0.0-pre-rc.21", path = "macro", default-features = false }
iroha_derive = { version = "=2.0.0-pre-rc.21", path = "macro/derive" }
iroha_futures = { version = "=2.0.0-pre-rc.21", path = "futures" }
iroha_futures_derive = { version = "=2.0.0-pre-rc.21", path = "futures/derive" }
iroha_genesis = { version = "=2.0.0-pre-rc.21", path = "genesis" }
iroha_ffi = { version = "=2.0.0-pre-rc.21", path = "ffi" }
iroha_ffi_derive = { version = "=2.0.0-pre-rc.21", path = "ffi/derive" }
iroha_version = { version = "=2.0.0-pre-rc.21", path = "version", default-features = false }
iroha_version_derive = { version = "=2.0.0-pre-rc.21", path = "version/derive", default-features = false }
iroha_wasm_codec = { version = "=2.0.0-pre-rc.21", path = "wasm_codec" }
iroha_wasm_builder = { version = "=2.0.0-pre-rc.21", path = "wasm_builder" }

iroha_smart_contract = { version = "=2.0.0-pre-rc.21", path = "smart_contract" }
iroha_smart_contract_derive = { version = "=2.0.0-pre-rc.21", path = "smart_contract/derive" }
iroha_smart_contract_utils = { version = "=2.0.0-pre-rc.21", path = "smart_contract/utils" }
iroha_executor_derive = { version = "=2.0.0-pre-rc.21", path = "smart_contract/executor/derive" }
iroha_trigger_derive = { version = "=2.0.0-pre-rc.21", path = "smart_contract/trigger/derive" }

test_network = { version = "=2.0.0-pre-rc.21", path = "core/test_network" }
proc-macro2 = "1.0.81"
syn = { version = "2.0.60", default-features = false }
quote = "1.0.36"
manyhow = { version = "0.8.1", features = ["darling"] }
darling = "0.20.8"
drop_bomb = "0.1.5"

futures = { version = "0.3.30", default-features = false }
tokio = "1.37.0"
tokio-stream = "0.1.15"
tokio-tungstenite = "0.21.0"
tungstenite = "0.21.0"
crossbeam-queue = "0.3.11"
parking_lot = { version = "0.12.1" }

once_cell = "1.19.0"
tempfile = "3.10.1"
path-absolutize = "3.1.1"
pathdiff = "0.2.1"
bytes = "1.6.0"

vergen = { version = "8.3.1", default-features = false }
trybuild = "1.0.91"
impls = "1.0.3"

base64 = { version = "0.22.0", default-features = false }
hex = { version = "0.4.3", default-features = false }
nonzero_ext = { version = "0.3.0", default-features = false }

url = "2.5.0"
prometheus = { version = "0.13.3", default-features = false }

clap = "4.5.4"
owo-colors = "3.5.0"
supports-color = "2.1.0"
inquire = "0.6.2"
spinoff = "0.8.0"

criterion = "0.5.1"
expect-test = "1.5.0"

eyre = "0.6.12"
color-eyre = "0.6.3"
thiserror = { version = "1.0.59", default-features = false }
displaydoc = { version = "0.2.4", default-features = false }

cfg-if = "1.0.0"
derive_more = { version = "0.99.17", default-features = false }
async-trait = "0.1.80"
strum = { version = "0.25.0", default-features = false }
getset = "0.1.2"
hex-literal = "0.4.1"

rand = { version = "0.8.5", default-features = false, features = ["getrandom", "alloc"] }
warp = { version = "0.3.7", default-features = false }
wasmtime = "15.0.1"

tracing = "0.1.40"
tracing-subscriber = { version = "0.3.18", default-features = false }

dashmap = "5.5.3"
rustc-hash = "1.1.0"

serde = { version = "1.0.198", default-features = false }
serde_json = { version = "1.0.116", default-features = false }
serde_yaml = "0.9.34"
serde_with = { version = "3.7.0", default-features = false }
parity-scale-codec = { version = "3.6.9", default-features = false }
json5 = "0.4.1"
toml = "0.8.12"

storage = { git = "https://github.com/Erigara/storage.git", rev = "6bd9fdd95220da7626471d190b17b2f5b8815c47" }

[workspace.lints]
rustdoc.private_doc_tests = "deny"

rust.anonymous_parameters = "deny"
rust.future_incompatible = "deny"
rust.missing_copy_implementations = "deny"
rust.missing_docs = "deny"
rust.nonstandard_style = "deny"
rust.rust_2018_idioms = "deny"
rust.trivial_casts = "deny"
rust.trivial_numeric_casts = "deny"
rust.unsafe_code = "deny"
rust.unused = "deny"
rust.unused_import_braces = "deny"
rust.variant_size_differences = "deny"
rust.explicit_outlives_requirements = "deny"
rust.non_ascii_idents = "deny"
rust.elided_lifetimes_in_paths = "allow"
rust.unknown_lints = "warn"
rust.single_use_lifetimes = "warn"
rust.unused_lifetimes = "warn"
# TODO: reenable
# rust.unsafe_op_in_unsafe_fn = "deny"

# pedantic
clippy.pedantic = { level = "warn", priority = -1 }
clippy.match_wildcard_for_single_variants = "allow"
clippy.semicolon_if_nothing_returned = "allow"
clippy.wildcard_imports = "allow"
clippy.manual_let_else = "allow"
clippy.enum_glob_use = "allow"
clippy.module_name_repetitions = "allow"
clippy.must_use_candidate = "allow"
clippy.missing_panics_doc = "allow"

# restriction
clippy.dbg_macro = "deny"

# nursery
clippy.debug_assert_with_mut_call = "deny"
clippy.derive_partial_eq_without_eq = "deny"
clippy.empty_line_after_outer_attr = "deny"
clippy.fallible_impl_from = "deny"
clippy.future_not_send = "deny"
clippy.iter_with_drain = "deny"
clippy.mutex_integer = "deny"
clippy.needless_collect = "deny"
clippy.path_buf_push_overwrite = "deny"
clippy.suboptimal_flops = "deny"
clippy.trailing_empty_array = "deny"
clippy.transmute_undefined_repr = "deny"
clippy.trivial_regex = "deny"
clippy.unused_peekable = "deny"
clippy.unused_rounding = "deny"
clippy.option_if_let_else = "warn"
clippy.or_fun_call = "warn"
clippy.redundant_pub_crate = "warn"
clippy.string_lit_as_bytes = "warn"
clippy.suspicious_operation_groupings = "warn"
clippy.useless_let_if_seq = "warn"

# cargo
clippy.redundant_feature_names = "deny"
clippy.wildcard_dependencies = "deny"

[workspace]
resolver = "2"
members = [
    "cli",
    "client",
    "client_cli",
    "config",
    "config/base",
    "core",
    "core/test_network",
    "crypto",
    "data_model",
    "genesis",
    "primitives",
    "primitives/derive",
    "primitives/numeric",
    "ffi",
    "ffi/derive",
    "futures",
    "futures/derive",
    "logger",
    "macro",
    "macro/derive",
    "macro/utils",
    "p2p",
    "sample_params",
    "schema",
    "schema/derive",
    "schema/gen",
    "smart_contract",
    "smart_contract/derive",
    "smart_contract/trigger",
    "smart_contract/trigger/derive",
    "smart_contract/utils",
    "smart_contract/executor",
    "smart_contract/executor/derive",
    "telemetry",
    "tools/kagami",
    "tools/kura_inspector",
    "tools/parity_scale_cli",
    "tools/swarm",
    "tools/wasm_builder_cli",
    "tools/wasm_test_runner",
    "torii",
    "torii/derive",
    "torii/const",
    "version",
    "version/derive",
    "wasm_codec",
    "wasm_codec/derive",
    "wasm_builder",
]

[profile.deploy]
inherits = "release"
strip = "symbols"
lto = true

[profile.profiling]
inherits = "release"
debug = "limited"
