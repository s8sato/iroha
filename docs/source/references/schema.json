{
  "Account": {
    "Struct": [
      {
        "name": "id",
        "type": "AccountId"
      },
      {
        "name": "assets",
        "type": "SortedMap<AssetId, Asset>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "AccountEvent": {
    "Enum": [
      {
        "tag": "Asset",
        "discriminant": 0,
        "type": "AssetEvent"
      },
      {
        "tag": "Created",
        "discriminant": 1,
        "type": "Account"
      },
      {
        "tag": "Deleted",
        "discriminant": 2,
        "type": "AccountId"
      },
      {
        "tag": "AuthenticationAdded",
        "discriminant": 3,
        "type": "AccountId"
      },
      {
        "tag": "AuthenticationRemoved",
        "discriminant": 4,
        "type": "AccountId"
      },
      {
        "tag": "PermissionAdded",
        "discriminant": 5,
        "type": "AccountPermissionChanged"
      },
      {
        "tag": "PermissionRemoved",
        "discriminant": 6,
        "type": "AccountPermissionChanged"
      },
      {
        "tag": "RoleRevoked",
        "discriminant": 7,
        "type": "AccountRoleChanged"
      },
      {
        "tag": "RoleGranted",
        "discriminant": 8,
        "type": "AccountRoleChanged"
      },
      {
        "tag": "MetadataInserted",
        "discriminant": 9,
        "type": "MetadataChanged<AccountId>"
      },
      {
        "tag": "MetadataRemoved",
        "discriminant": 10,
        "type": "MetadataChanged<AccountId>"
      }
    ]
  },
  "AccountEventFilter": {
    "Struct": [
      {
        "name": "id_matcher",
        "type": "Option<AccountId>"
      },
      {
        "name": "event_set",
        "type": "AccountEventSet"
      }
    ]
  },
  "AccountEventSet": "u32",
  "AccountId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "DomainId"
      },
      {
        "name": "signatory",
        "type": "PublicKey"
      }
    ]
  },
  "AccountPermissionChanged": {
    "Struct": [
      {
        "name": "account_id",
        "type": "AccountId"
      },
      {
        "name": "permission_id",
        "type": "Name"
      }
    ]
  },
  "AccountRoleChanged": {
    "Struct": [
      {
        "name": "account_id",
        "type": "AccountId"
      },
      {
        "name": "role_id",
        "type": "RoleId"
      }
    ]
  },
  "Action": {
    "Struct": [
      {
        "name": "executable",
        "type": "Executable"
      },
      {
        "name": "repeats",
        "type": "Repeats"
      },
      {
        "name": "authority",
        "type": "AccountId"
      },
      {
        "name": "filter",
        "type": "TriggeringEventFilterBox"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "Algorithm": {
    "Enum": [
      {
        "tag": "Ed25519",
        "discriminant": 0
      },
      {
        "tag": "Secp256k1",
        "discriminant": 1
      },
      {
        "tag": "BlsNormal",
        "discriminant": 2
      },
      {
        "tag": "BlsSmall",
        "discriminant": 3
      }
    ]
  },
  "Array<u16, 8>": {
    "Array": {
      "type": "u16",
      "len": 8
    }
  },
  "Array<u8, 32>": {
    "Array": {
      "type": "u8",
      "len": 32
    }
  },
  "Array<u8, 4>": {
    "Array": {
      "type": "u8",
      "len": 4
    }
  },
  "Asset": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetId"
      },
      {
        "name": "value",
        "type": "AssetValue"
      }
    ]
  },
  "AssetChanged": {
    "Struct": [
      {
        "name": "asset_id",
        "type": "AssetId"
      },
      {
        "name": "amount",
        "type": "AssetValue"
      }
    ]
  },
  "AssetDefinition": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "value_type",
        "type": "AssetValueType"
      },
      {
        "name": "mintable",
        "type": "Mintable"
      },
      {
        "name": "logo",
        "type": "Option<IpfsPath>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      },
      {
        "name": "owned_by",
        "type": "AccountId"
      }
    ]
  },
  "AssetDefinitionEvent": {
    "Enum": [
      {
        "tag": "Created",
        "discriminant": 0,
        "type": "AssetDefinition"
      },
      {
        "tag": "MintabilityChanged",
        "discriminant": 1,
        "type": "AssetDefinitionId"
      },
      {
        "tag": "OwnerChanged",
        "discriminant": 2,
        "type": "AssetDefinitionOwnerChanged"
      },
      {
        "tag": "Deleted",
        "discriminant": 3,
        "type": "AssetDefinitionId"
      },
      {
        "tag": "MetadataInserted",
        "discriminant": 4,
        "type": "MetadataChanged<AssetDefinitionId>"
      },
      {
        "tag": "MetadataRemoved",
        "discriminant": 5,
        "type": "MetadataChanged<AssetDefinitionId>"
      },
      {
        "tag": "TotalQuantityChanged",
        "discriminant": 6,
        "type": "AssetDefinitionTotalQuantityChanged"
      }
    ]
  },
  "AssetDefinitionEventFilter": {
    "Struct": [
      {
        "name": "id_matcher",
        "type": "Option<AssetDefinitionId>"
      },
      {
        "name": "event_set",
        "type": "AssetDefinitionEventSet"
      }
    ]
  },
  "AssetDefinitionEventSet": "u32",
  "AssetDefinitionId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "DomainId"
      },
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "AssetDefinitionOwnerChanged": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "new_owner",
        "type": "AccountId"
      }
    ]
  },
  "AssetDefinitionTotalQuantityChanged": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "total_amount",
        "type": "Numeric"
      }
    ]
  },
  "AssetEvent": {
    "Enum": [
      {
        "tag": "Created",
        "discriminant": 0,
        "type": "Asset"
      },
      {
        "tag": "Deleted",
        "discriminant": 1,
        "type": "AssetId"
      },
      {
        "tag": "Added",
        "discriminant": 2,
        "type": "AssetChanged"
      },
      {
        "tag": "Removed",
        "discriminant": 3,
        "type": "AssetChanged"
      },
      {
        "tag": "MetadataInserted",
        "discriminant": 4,
        "type": "MetadataChanged<AssetId>"
      },
      {
        "tag": "MetadataRemoved",
        "discriminant": 5,
        "type": "MetadataChanged<AssetId>"
      }
    ]
  },
  "AssetEventFilter": {
    "Struct": [
      {
        "name": "id_matcher",
        "type": "Option<AssetId>"
      },
      {
        "name": "event_set",
        "type": "AssetEventSet"
      }
    ]
  },
  "AssetEventSet": "u32",
  "AssetId": {
    "Struct": [
      {
        "name": "definition_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "account_id",
        "type": "AccountId"
      }
    ]
  },
  "AssetTransferBox": {
    "Enum": [
      {
        "tag": "Numeric",
        "discriminant": 0,
        "type": "Transfer<Asset, Numeric, Account>"
      },
      {
        "tag": "Store",
        "discriminant": 1,
        "type": "Transfer<Asset, Metadata, Account>"
      }
    ]
  },
  "AssetValue": {
    "Enum": [
      {
        "tag": "Numeric",
        "discriminant": 0,
        "type": "Numeric"
      },
      {
        "tag": "Store",
        "discriminant": 1,
        "type": "Metadata"
      }
    ]
  },
  "AssetValueType": {
    "Enum": [
      {
        "tag": "Numeric",
        "discriminant": 0,
        "type": "NumericSpec"
      },
      {
        "tag": "Store",
        "discriminant": 1
      }
    ]
  },
  "AtIndex": {
    "Struct": [
      {
        "name": "index",
        "type": "u32"
      },
      {
        "name": "predicate",
        "type": "QueryOutputPredicate"
      }
    ]
  },
  "BatchedResponse<QueryOutputBox>": {
    "Enum": [
      {
        "tag": "V1",
        "discriminant": 1,
        "type": "BatchedResponseV1<QueryOutputBox>"
      }
    ]
  },
  "BatchedResponseV1<QueryOutputBox>": {
    "Struct": [
      {
        "name": "batch",
        "type": "QueryOutputBox"
      },
      {
        "name": "cursor",
        "type": "ForwardCursor"
      }
    ]
  },
  "BlockHeader": {
    "Struct": [
      {
        "name": "height",
        "type": "u64"
      },
      {
        "name": "timestamp_ms",
        "type": "u64"
      },
      {
        "name": "previous_block_hash",
        "type": "Option<HashOf<SignedBlock>>"
      },
      {
        "name": "transactions_hash",
        "type": "Option<HashOf<MerkleTree<SignedTransaction>>>"
      },
      {
        "name": "view_change_index",
        "type": "u64"
      },
      {
        "name": "consensus_estimation_ms",
        "type": "u64"
      }
    ]
  },
  "BlockMessage": "SignedBlock",
  "BlockPayload": {
    "Struct": [
      {
        "name": "header",
        "type": "BlockHeader"
      },
      {
        "name": "commit_topology",
        "type": "Vec<PeerId>"
      },
      {
        "name": "transactions",
        "type": "Vec<TransactionValue>"
      },
      {
        "name": "event_recommendations",
        "type": "Vec<Event>"
      }
    ]
  },
  "BlockRejectionReason": {
    "Enum": [
      {
        "tag": "ConsensusBlockRejection",
        "discriminant": 0
      }
    ]
  },
  "BlockSubscriptionRequest": "NonZero<u64>",
  "Burn<Numeric, Asset>": {
    "Struct": [
      {
        "name": "object",
        "type": "Numeric"
      },
      {
        "name": "destination_id",
        "type": "AssetId"
      }
    ]
  },
  "Burn<u32, Trigger>": {
    "Struct": [
      {
        "name": "object",
        "type": "u32"
      },
      {
        "name": "destination_id",
        "type": "TriggerId"
      }
    ]
  },
  "BurnBox": {
    "Enum": [
      {
        "tag": "Asset",
        "discriminant": 0,
        "type": "Burn<Numeric, Asset>"
      },
      {
        "tag": "TriggerRepetitions",
        "discriminant": 1,
        "type": "Burn<u32, Trigger>"
      }
    ]
  },
  "ChainId": "String",
  "Compact<u128>": {
    "Int": "Compact"
  },
  "Compact<u32>": {
    "Int": "Compact"
  },
  "ConfigurationEvent": {
    "Enum": [
      {
        "tag": "Changed",
        "discriminant": 0,
        "type": "ParameterId"
      },
      {
        "tag": "Created",
        "discriminant": 1,
        "type": "ParameterId"
      },
      {
        "tag": "Deleted",
        "discriminant": 2,
        "type": "ParameterId"
      }
    ]
  },
  "ConfigurationEventFilter": {
    "Struct": [
      {
        "name": "id_matcher",
        "type": "Option<ParameterId>"
      },
      {
        "name": "event_set",
        "type": "ConfigurationEventSet"
      }
    ]
  },
  "ConfigurationEventSet": "u32",
  "Container": {
    "Enum": [
      {
        "tag": "Any",
        "discriminant": 0,
        "type": "QueryOutputPredicate"
      },
      {
        "tag": "All",
        "discriminant": 1,
        "type": "QueryOutputPredicate"
      },
      {
        "tag": "AtIndex",
        "discriminant": 2,
        "type": "AtIndex"
      }
    ]
  },
  "DataEvent": {
    "Enum": [
      {
        "tag": "Peer",
        "discriminant": 0,
        "type": "PeerEvent"
      },
      {
        "tag": "Domain",
        "discriminant": 1,
        "type": "DomainEvent"
      },
      {
        "tag": "Trigger",
        "discriminant": 2,
        "type": "TriggerEvent"
      },
      {
        "tag": "Role",
        "discriminant": 3,
        "type": "RoleEvent"
      },
      {
        "tag": "PermissionToken",
        "discriminant": 4,
        "type": "PermissionTokenSchemaUpdateEvent"
      },
      {
        "tag": "Configuration",
        "discriminant": 5,
        "type": "ConfigurationEvent"
      },
      {
        "tag": "Executor",
        "discriminant": 6,
        "type": "ExecutorEvent"
      }
    ]
  },
  "DataEventFilter": {
    "Enum": [
      {
        "tag": "Any",
        "discriminant": 0
      },
      {
        "tag": "Peer",
        "discriminant": 1,
        "type": "PeerEventFilter"
      },
      {
        "tag": "Domain",
        "discriminant": 2,
        "type": "DomainEventFilter"
      },
      {
        "tag": "Account",
        "discriminant": 3,
        "type": "AccountEventFilter"
      },
      {
        "tag": "Asset",
        "discriminant": 4,
        "type": "AssetEventFilter"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 5,
        "type": "AssetDefinitionEventFilter"
      },
      {
        "tag": "Trigger",
        "discriminant": 6,
        "type": "TriggerEventFilter"
      },
      {
        "tag": "Role",
        "discriminant": 7,
        "type": "RoleEventFilter"
      },
      {
        "tag": "PermissionTokenSchemaUpdate",
        "discriminant": 8
      },
      {
        "tag": "Configuration",
        "discriminant": 9,
        "type": "ConfigurationEventFilter"
      },
      {
        "tag": "Executor",
        "discriminant": 10,
        "type": "ExecutorEventFilter"
      }
    ]
  },
  "Domain": {
    "Struct": [
      {
        "name": "id",
        "type": "DomainId"
      },
      {
        "name": "accounts",
        "type": "SortedMap<AccountId, Account>"
      },
      {
        "name": "asset_definitions",
        "type": "SortedMap<AssetDefinitionId, AssetDefinition>"
      },
      {
        "name": "asset_total_quantities",
        "type": "SortedMap<AssetDefinitionId, Numeric>"
      },
      {
        "name": "logo",
        "type": "Option<IpfsPath>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      },
      {
        "name": "owned_by",
        "type": "AccountId"
      }
    ]
  },
  "DomainEvent": {
    "Enum": [
      {
        "tag": "Account",
        "discriminant": 0,
        "type": "AccountEvent"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 1,
        "type": "AssetDefinitionEvent"
      },
      {
        "tag": "Created",
        "discriminant": 2,
        "type": "Domain"
      },
      {
        "tag": "Deleted",
        "discriminant": 3,
        "type": "DomainId"
      },
      {
        "tag": "MetadataInserted",
        "discriminant": 4,
        "type": "MetadataChanged<DomainId>"
      },
      {
        "tag": "MetadataRemoved",
        "discriminant": 5,
        "type": "MetadataChanged<DomainId>"
      },
      {
        "tag": "OwnerChanged",
        "discriminant": 6,
        "type": "DomainOwnerChanged"
      }
    ]
  },
  "DomainEventFilter": {
    "Struct": [
      {
        "name": "id_matcher",
        "type": "Option<DomainId>"
      },
      {
        "name": "event_set",
        "type": "DomainEventSet"
      }
    ]
  },
  "DomainEventSet": "u32",
  "DomainId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "DomainOwnerChanged": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "DomainId"
      },
      {
        "name": "new_owner",
        "type": "AccountId"
      }
    ]
  },
  "Duration": {
    "Tuple": [
      "u64",
      "u32"
    ]
  },
  "Event": {
    "Enum": [
      {
        "tag": "Pipeline",
        "discriminant": 0,
        "type": "PipelineEvent"
      },
      {
        "tag": "Data",
        "discriminant": 1,
        "type": "DataEvent"
      },
      {
        "tag": "Time",
        "discriminant": 2,
        "type": "TimeEvent"
      },
      {
        "tag": "ExecuteTrigger",
        "discriminant": 3,
        "type": "ExecuteTriggerEvent"
      },
      {
        "tag": "TriggerCompleted",
        "discriminant": 4,
        "type": "TriggerCompletedEvent"
      }
    ]
  },
  "EventFilterBox": {
    "Enum": [
      {
        "tag": "Pipeline",
        "discriminant": 0,
        "type": "PipelineEventFilter"
      },
      {
        "tag": "Data",
        "discriminant": 1,
        "type": "DataEventFilter"
      },
      {
        "tag": "Time",
        "discriminant": 2,
        "type": "TimeEventFilter"
      },
      {
        "tag": "ExecuteTrigger",
        "discriminant": 3,
        "type": "ExecuteTriggerEventFilter"
      },
      {
        "tag": "TriggerCompleted",
        "discriminant": 4,
        "type": "TriggerCompletedEventFilter"
      }
    ]
  },
  "EventMessage": "Event",
  "EventSubscriptionRequest": "EventFilterBox",
  "Executable": {
    "Enum": [
      {
        "tag": "Instructions",
        "discriminant": 0,
        "type": "Vec<InstructionBox>"
      },
      {
        "tag": "Wasm",
        "discriminant": 1,
        "type": "WasmSmartContract"
      }
    ]
  },
  "ExecuteTrigger": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "TriggerId"
      }
    ]
  },
  "ExecuteTriggerEvent": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "TriggerId"
      },
      {
        "name": "authority",
        "type": "AccountId"
      }
    ]
  },
  "ExecuteTriggerEventFilter": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "Option<TriggerId>"
      },
      {
        "name": "authority",
        "type": "Option<AccountId>"
      }
    ]
  },
  "ExecutionTime": {
    "Enum": [
      {
        "tag": "PreCommit",
        "discriminant": 0
      },
      {
        "tag": "Schedule",
        "discriminant": 1,
        "type": "Schedule"
      }
    ]
  },
  "Executor": {
    "Struct": [
      {
        "name": "wasm",
        "type": "WasmSmartContract"
      }
    ]
  },
  "ExecutorEvent": {
    "Enum": [
      {
        "tag": "Upgraded",
        "discriminant": 0
      }
    ]
  },
  "ExecutorEventFilter": {
    "Struct": [
      {
        "name": "event_set",
        "type": "ExecutorEventSet"
      }
    ]
  },
  "ExecutorEventSet": "u32",
  "Fail": {
    "Struct": [
      {
        "name": "message",
        "type": "String"
      }
    ]
  },
  "FindAccountById": {
    "Struct": [
      {
        "name": "id",
        "type": "AccountId"
      }
    ]
  },
  "FindAccountKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "AccountId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "FindAccountsByDomainId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "DomainId"
      }
    ]
  },
  "FindAccountsWithAsset": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "AssetDefinitionId"
      }
    ]
  },
  "FindAllAccounts": null,
  "FindAllActiveTriggerIds": null,
  "FindAllAssets": null,
  "FindAllAssetsDefinitions": null,
  "FindAllBlockHeaders": null,
  "FindAllBlocks": null,
  "FindAllDomains": null,
  "FindAllParameters": null,
  "FindAllPeers": null,
  "FindAllRoleIds": null,
  "FindAllRoles": null,
  "FindAllTransactions": null,
  "FindAssetById": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetId"
      }
    ]
  },
  "FindAssetDefinitionById": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetDefinitionId"
      }
    ]
  },
  "FindAssetDefinitionKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "FindAssetKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "FindAssetQuantityById": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetId"
      }
    ]
  },
  "FindAssetsByAccountId": {
    "Struct": [
      {
        "name": "account_id",
        "type": "AccountId"
      }
    ]
  },
  "FindAssetsByAssetDefinitionId": {
    "Struct": [
      {
        "name": "asset_definition_id",
        "type": "AssetDefinitionId"
      }
    ]
  },
  "FindAssetsByDomainId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "DomainId"
      }
    ]
  },
  "FindAssetsByDomainIdAndAssetDefinitionId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "DomainId"
      },
      {
        "name": "asset_definition_id",
        "type": "AssetDefinitionId"
      }
    ]
  },
  "FindAssetsByName": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "FindBlockHeaderByHash": {
    "Struct": [
      {
        "name": "hash",
        "type": "HashOf<SignedBlock>"
      }
    ]
  },
  "FindDomainById": {
    "Struct": [
      {
        "name": "id",
        "type": "DomainId"
      }
    ]
  },
  "FindDomainKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "DomainId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "FindError": {
    "Enum": [
      {
        "tag": "Asset",
        "discriminant": 0,
        "type": "AssetId"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 1,
        "type": "AssetDefinitionId"
      },
      {
        "tag": "Account",
        "discriminant": 2,
        "type": "AccountId"
      },
      {
        "tag": "Domain",
        "discriminant": 3,
        "type": "DomainId"
      },
      {
        "tag": "MetadataKey",
        "discriminant": 4,
        "type": "Name"
      },
      {
        "tag": "Block",
        "discriminant": 5,
        "type": "HashOf<SignedBlock>"
      },
      {
        "tag": "Transaction",
        "discriminant": 6,
        "type": "HashOf<SignedTransaction>"
      },
      {
        "tag": "Peer",
        "discriminant": 7,
        "type": "PeerId"
      },
      {
        "tag": "Trigger",
        "discriminant": 8,
        "type": "TriggerId"
      },
      {
        "tag": "Role",
        "discriminant": 9,
        "type": "RoleId"
      },
      {
        "tag": "PermissionToken",
        "discriminant": 10,
        "type": "Name"
      },
      {
        "tag": "Parameter",
        "discriminant": 11,
        "type": "ParameterId"
      },
      {
        "tag": "PublicKey",
        "discriminant": 12,
        "type": "PublicKey"
      }
    ]
  },
  "FindPermissionTokenSchema": null,
  "FindPermissionTokensByAccountId": {
    "Struct": [
      {
        "name": "id",
        "type": "AccountId"
      }
    ]
  },
  "FindRoleByRoleId": {
    "Struct": [
      {
        "name": "id",
        "type": "RoleId"
      }
    ]
  },
  "FindRolesByAccountId": {
    "Struct": [
      {
        "name": "id",
        "type": "AccountId"
      }
    ]
  },
  "FindTotalAssetQuantityByAssetDefinitionId": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetDefinitionId"
      }
    ]
  },
  "FindTransactionByHash": {
    "Struct": [
      {
        "name": "hash",
        "type": "HashOf<SignedTransaction>"
      }
    ]
  },
  "FindTransactionsByAccountId": {
    "Struct": [
      {
        "name": "account_id",
        "type": "AccountId"
      }
    ]
  },
  "FindTriggerById": {
    "Struct": [
      {
        "name": "id",
        "type": "TriggerId"
      }
    ]
  },
  "FindTriggerKeyValueByIdAndKey": {
    "Struct": [
      {
        "name": "id",
        "type": "TriggerId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "FindTriggersByDomainId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "DomainId"
      }
    ]
  },
  "ForwardCursor": {
    "Struct": [
      {
        "name": "query_id",
        "type": "Option<String>"
      },
      {
        "name": "cursor",
        "type": "Option<NonZero<u64>>"
      }
    ]
  },
  "GenericPredicateBox<QueryOutputPredicate>": {
    "Enum": [
      {
        "tag": "And",
        "discriminant": 0,
        "type": "NonTrivial<GenericPredicateBox<QueryOutputPredicate>>"
      },
      {
        "tag": "Or",
        "discriminant": 1,
        "type": "NonTrivial<GenericPredicateBox<QueryOutputPredicate>>"
      },
      {
        "tag": "Not",
        "discriminant": 2,
        "type": "GenericPredicateBox<QueryOutputPredicate>"
      },
      {
        "tag": "Raw",
        "discriminant": 3,
        "type": "QueryOutputPredicate"
      }
    ]
  },
  "Grant<PermissionToken, Account>": {
    "Struct": [
      {
        "name": "object",
        "type": "PermissionToken"
      },
      {
        "name": "destination_id",
        "type": "AccountId"
      }
    ]
  },
  "Grant<PermissionToken, Role>": {
    "Struct": [
      {
        "name": "object",
        "type": "PermissionToken"
      },
      {
        "name": "destination_id",
        "type": "RoleId"
      }
    ]
  },
  "Grant<RoleId, Account>": {
    "Struct": [
      {
        "name": "object",
        "type": "RoleId"
      },
      {
        "name": "destination_id",
        "type": "AccountId"
      }
    ]
  },
  "GrantBox": {
    "Enum": [
      {
        "tag": "PermissionToken",
        "discriminant": 0,
        "type": "Grant<PermissionToken, Account>"
      },
      {
        "tag": "Role",
        "discriminant": 1,
        "type": "Grant<RoleId, Account>"
      },
      {
        "tag": "RolePermissionToken",
        "discriminant": 2,
        "type": "Grant<PermissionToken, Role>"
      }
    ]
  },
  "Hash": "Array<u8, 32>",
  "HashOf<MerkleTree<SignedTransaction>>": "Hash",
  "HashOf<SignedBlock>": "Hash",
  "HashOf<SignedTransaction>": "Hash",
  "IdBox": {
    "Enum": [
      {
        "tag": "DomainId",
        "discriminant": 0,
        "type": "DomainId"
      },
      {
        "tag": "AccountId",
        "discriminant": 1,
        "type": "AccountId"
      },
      {
        "tag": "AssetDefinitionId",
        "discriminant": 2,
        "type": "AssetDefinitionId"
      },
      {
        "tag": "AssetId",
        "discriminant": 3,
        "type": "AssetId"
      },
      {
        "tag": "PeerId",
        "discriminant": 4,
        "type": "PeerId"
      },
      {
        "tag": "TriggerId",
        "discriminant": 5,
        "type": "TriggerId"
      },
      {
        "tag": "RoleId",
        "discriminant": 6,
        "type": "RoleId"
      },
      {
        "tag": "PermissionTokenId",
        "discriminant": 7,
        "type": "Name"
      },
      {
        "tag": "ParameterId",
        "discriminant": 8,
        "type": "ParameterId"
      }
    ]
  },
  "IdentifiableBox": {
    "Enum": [
      {
        "tag": "NewDomain",
        "discriminant": 0,
        "type": "NewDomain"
      },
      {
        "tag": "NewAccount",
        "discriminant": 1,
        "type": "NewAccount"
      },
      {
        "tag": "NewAssetDefinition",
        "discriminant": 2,
        "type": "NewAssetDefinition"
      },
      {
        "tag": "NewRole",
        "discriminant": 3,
        "type": "NewRole"
      },
      {
        "tag": "Peer",
        "discriminant": 4,
        "type": "Peer"
      },
      {
        "tag": "Domain",
        "discriminant": 5,
        "type": "Domain"
      },
      {
        "tag": "Account",
        "discriminant": 6,
        "type": "Account"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 7,
        "type": "AssetDefinition"
      },
      {
        "tag": "Asset",
        "discriminant": 8,
        "type": "Asset"
      },
      {
        "tag": "Trigger",
        "discriminant": 9,
        "type": "Trigger"
      },
      {
        "tag": "Role",
        "discriminant": 10,
        "type": "Role"
      },
      {
        "tag": "Parameter",
        "discriminant": 11,
        "type": "Parameter"
      }
    ]
  },
  "InstructionBox": {
    "Enum": [
      {
        "tag": "Register",
        "discriminant": 0,
        "type": "RegisterBox"
      },
      {
        "tag": "Unregister",
        "discriminant": 1,
        "type": "UnregisterBox"
      },
      {
        "tag": "Mint",
        "discriminant": 2,
        "type": "MintBox"
      },
      {
        "tag": "Burn",
        "discriminant": 3,
        "type": "BurnBox"
      },
      {
        "tag": "Transfer",
        "discriminant": 4,
        "type": "TransferBox"
      },
      {
        "tag": "SetKeyValue",
        "discriminant": 5,
        "type": "SetKeyValueBox"
      },
      {
        "tag": "RemoveKeyValue",
        "discriminant": 6,
        "type": "RemoveKeyValueBox"
      },
      {
        "tag": "Grant",
        "discriminant": 7,
        "type": "GrantBox"
      },
      {
        "tag": "Revoke",
        "discriminant": 8,
        "type": "RevokeBox"
      },
      {
        "tag": "ExecuteTrigger",
        "discriminant": 9,
        "type": "ExecuteTrigger"
      },
      {
        "tag": "SetParameter",
        "discriminant": 10,
        "type": "SetParameter"
      },
      {
        "tag": "NewParameter",
        "discriminant": 11,
        "type": "NewParameter"
      },
      {
        "tag": "Upgrade",
        "discriminant": 12,
        "type": "Upgrade"
      },
      {
        "tag": "Log",
        "discriminant": 13,
        "type": "Log"
      },
      {
        "tag": "Fail",
        "discriminant": 14,
        "type": "Fail"
      }
    ]
  },
  "InstructionEvaluationError": {
    "Enum": [
      {
        "tag": "Unsupported",
        "discriminant": 0,
        "type": "InstructionType"
      },
      {
        "tag": "PermissionParameter",
        "discriminant": 1,
        "type": "String"
      },
      {
        "tag": "Type",
        "discriminant": 2,
        "type": "TypeError"
      }
    ]
  },
  "InstructionExecutionError": {
    "Enum": [
      {
        "tag": "Evaluate",
        "discriminant": 0,
        "type": "InstructionEvaluationError"
      },
      {
        "tag": "Query",
        "discriminant": 1,
        "type": "QueryExecutionFail"
      },
      {
        "tag": "Conversion",
        "discriminant": 2,
        "type": "String"
      },
      {
        "tag": "Find",
        "discriminant": 3,
        "type": "FindError"
      },
      {
        "tag": "Repetition",
        "discriminant": 4,
        "type": "RepetitionError"
      },
      {
        "tag": "Mintability",
        "discriminant": 5,
        "type": "MintabilityError"
      },
      {
        "tag": "Math",
        "discriminant": 6,
        "type": "MathError"
      },
      {
        "tag": "Metadata",
        "discriminant": 7,
        "type": "MetadataError"
      },
      {
        "tag": "Fail",
        "discriminant": 8,
        "type": "String"
      },
      {
        "tag": "InvalidParameter",
        "discriminant": 9,
        "type": "InvalidParameterError"
      },
      {
        "tag": "InvariantViolation",
        "discriminant": 10,
        "type": "String"
      }
    ]
  },
  "InstructionExecutionFail": {
    "Struct": [
      {
        "name": "instruction",
        "type": "InstructionBox"
      },
      {
        "name": "reason",
        "type": "String"
      }
    ]
  },
  "InstructionType": {
    "Enum": [
      {
        "tag": "Register",
        "discriminant": 0
      },
      {
        "tag": "Unregister",
        "discriminant": 1
      },
      {
        "tag": "Mint",
        "discriminant": 2
      },
      {
        "tag": "Burn",
        "discriminant": 3
      },
      {
        "tag": "Transfer",
        "discriminant": 4
      },
      {
        "tag": "SetKeyValue",
        "discriminant": 5
      },
      {
        "tag": "RemoveKeyValue",
        "discriminant": 6
      },
      {
        "tag": "Grant",
        "discriminant": 7
      },
      {
        "tag": "Revoke",
        "discriminant": 8
      },
      {
        "tag": "ExecuteTrigger",
        "discriminant": 9
      },
      {
        "tag": "SetParameter",
        "discriminant": 10
      },
      {
        "tag": "NewParameter",
        "discriminant": 11
      },
      {
        "tag": "Upgrade",
        "discriminant": 12
      },
      {
        "tag": "Log",
        "discriminant": 13
      },
      {
        "tag": "Fail",
        "discriminant": 14
      }
    ]
  },
  "InvalidParameterError": {
    "Enum": [
      {
        "tag": "Wasm",
        "discriminant": 0,
        "type": "String"
      },
      {
        "tag": "NameLength",
        "discriminant": 1
      }
    ]
  },
  "IpfsPath": "String",
  "Ipv4Addr": "Array<u8, 4>",
  "Ipv6Addr": "Array<u16, 8>",
  "JsonString": "String",
  "LengthLimits": {
    "Struct": [
      {
        "name": "min",
        "type": "u32"
      },
      {
        "name": "max",
        "type": "u32"
      }
    ]
  },
  "Level": {
    "Enum": [
      {
        "tag": "TRACE",
        "discriminant": 0
      },
      {
        "tag": "DEBUG",
        "discriminant": 1
      },
      {
        "tag": "INFO",
        "discriminant": 2
      },
      {
        "tag": "WARN",
        "discriminant": 3
      },
      {
        "tag": "ERROR",
        "discriminant": 4
      }
    ]
  },
  "Limits": {
    "Struct": [
      {
        "name": "capacity",
        "type": "u32"
      },
      {
        "name": "max_entry_len",
        "type": "u32"
      }
    ]
  },
  "Log": {
    "Struct": [
      {
        "name": "level",
        "type": "Level"
      },
      {
        "name": "msg",
        "type": "String"
      }
    ]
  },
  "MathError": {
    "Enum": [
      {
        "tag": "Overflow",
        "discriminant": 0
      },
      {
        "tag": "NotEnoughQuantity",
        "discriminant": 1
      },
      {
        "tag": "DivideByZero",
        "discriminant": 2
      },
      {
        "tag": "NegativeValue",
        "discriminant": 3
      },
      {
        "tag": "DomainViolation",
        "discriminant": 4
      },
      {
        "tag": "Unknown",
        "discriminant": 5
      },
      {
        "tag": "FixedPointConversion",
        "discriminant": 6,
        "type": "String"
      }
    ]
  },
  "MerkleTree<SignedTransaction>": {
    "Vec": "HashOf<SignedTransaction>"
  },
  "Metadata": "SortedMap<Name, MetadataValueBox>",
  "MetadataChanged<AccountId>": {
    "Struct": [
      {
        "name": "target_id",
        "type": "AccountId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "MetadataValueBox"
      }
    ]
  },
  "MetadataChanged<AssetDefinitionId>": {
    "Struct": [
      {
        "name": "target_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "MetadataValueBox"
      }
    ]
  },
  "MetadataChanged<AssetId>": {
    "Struct": [
      {
        "name": "target_id",
        "type": "AssetId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "MetadataValueBox"
      }
    ]
  },
  "MetadataChanged<DomainId>": {
    "Struct": [
      {
        "name": "target_id",
        "type": "DomainId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "MetadataValueBox"
      }
    ]
  },
  "MetadataError": {
    "Enum": [
      {
        "tag": "EmptyPath",
        "discriminant": 0
      },
      {
        "tag": "EntryTooBig",
        "discriminant": 1,
        "type": "SizeError"
      },
      {
        "tag": "MaxCapacity",
        "discriminant": 2,
        "type": "SizeError"
      },
      {
        "tag": "MissingSegment",
        "discriminant": 3,
        "type": "Name"
      },
      {
        "tag": "InvalidSegment",
        "discriminant": 4,
        "type": "Name"
      }
    ]
  },
  "MetadataValueBox": {
    "Enum": [
      {
        "tag": "Bool",
        "discriminant": 0,
        "type": "bool"
      },
      {
        "tag": "String",
        "discriminant": 1,
        "type": "String"
      },
      {
        "tag": "Name",
        "discriminant": 2,
        "type": "Name"
      },
      {
        "tag": "Bytes",
        "discriminant": 3,
        "type": "Vec<u8>"
      },
      {
        "tag": "Numeric",
        "discriminant": 4,
        "type": "Numeric"
      },
      {
        "tag": "LimitedMetadata",
        "discriminant": 5,
        "type": "Metadata"
      },
      {
        "tag": "Vec",
        "discriminant": 6,
        "type": "Vec<MetadataValueBox>"
      }
    ]
  },
  "Mint<Numeric, Asset>": {
    "Struct": [
      {
        "name": "object",
        "type": "Numeric"
      },
      {
        "name": "destination_id",
        "type": "AssetId"
      }
    ]
  },
  "Mint<u32, Trigger>": {
    "Struct": [
      {
        "name": "object",
        "type": "u32"
      },
      {
        "name": "destination_id",
        "type": "TriggerId"
      }
    ]
  },
  "MintBox": {
    "Enum": [
      {
        "tag": "Asset",
        "discriminant": 0,
        "type": "Mint<Numeric, Asset>"
      },
      {
        "tag": "TriggerRepetitions",
        "discriminant": 1,
        "type": "Mint<u32, Trigger>"
      }
    ]
  },
  "MintabilityError": {
    "Enum": [
      {
        "tag": "MintUnmintable",
        "discriminant": 0
      },
      {
        "tag": "ForbidMintOnMintable",
        "discriminant": 1
      }
    ]
  },
  "Mintable": {
    "Enum": [
      {
        "tag": "Infinitely",
        "discriminant": 0
      },
      {
        "tag": "Once",
        "discriminant": 1
      },
      {
        "tag": "Not",
        "discriminant": 2
      }
    ]
  },
  "Mismatch<AssetValueType>": {
    "Struct": [
      {
        "name": "expected",
        "type": "AssetValueType"
      },
      {
        "name": "actual",
        "type": "AssetValueType"
      }
    ]
  },
  "Name": "String",
  "NewAccount": {
    "Struct": [
      {
        "name": "id",
        "type": "AccountId"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "NewAssetDefinition": {
    "Struct": [
      {
        "name": "id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "value_type",
        "type": "AssetValueType"
      },
      {
        "name": "mintable",
        "type": "Mintable"
      },
      {
        "name": "logo",
        "type": "Option<IpfsPath>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "NewDomain": {
    "Struct": [
      {
        "name": "id",
        "type": "DomainId"
      },
      {
        "name": "logo",
        "type": "Option<IpfsPath>"
      },
      {
        "name": "metadata",
        "type": "Metadata"
      }
    ]
  },
  "NewParameter": {
    "Struct": [
      {
        "name": "parameter",
        "type": "Parameter"
      }
    ]
  },
  "NewRole": {
    "Struct": [
      {
        "name": "inner",
        "type": "Role"
      }
    ]
  },
  "NonTrivial<GenericPredicateBox<QueryOutputPredicate>>": "Vec<GenericPredicateBox<QueryOutputPredicate>>",
  "NonZero<u32>": "u32",
  "NonZero<u64>": "u64",
  "Numeric": {
    "Struct": [
      {
        "name": "mantissa",
        "type": "Compact<u128>"
      },
      {
        "name": "scale",
        "type": "Compact<u32>"
      }
    ]
  },
  "NumericSpec": {
    "Struct": [
      {
        "name": "scale",
        "type": "Option<u32>"
      }
    ]
  },
  "Option<AccountId>": {
    "Option": "AccountId"
  },
  "Option<AssetDefinitionId>": {
    "Option": "AssetDefinitionId"
  },
  "Option<AssetId>": {
    "Option": "AssetId"
  },
  "Option<DomainId>": {
    "Option": "DomainId"
  },
  "Option<Duration>": {
    "Option": "Duration"
  },
  "Option<Hash>": {
    "Option": "Hash"
  },
  "Option<HashOf<MerkleTree<SignedTransaction>>>": {
    "Option": "HashOf<MerkleTree<SignedTransaction>>"
  },
  "Option<HashOf<SignedBlock>>": {
    "Option": "HashOf<SignedBlock>"
  },
  "Option<IpfsPath>": {
    "Option": "IpfsPath"
  },
  "Option<NonZero<u32>>": {
    "Option": "NonZero<u32>"
  },
  "Option<NonZero<u64>>": {
    "Option": "NonZero<u64>"
  },
  "Option<ParameterId>": {
    "Option": "ParameterId"
  },
  "Option<PeerId>": {
    "Option": "PeerId"
  },
  "Option<PipelineEntityKind>": {
    "Option": "PipelineEntityKind"
  },
  "Option<PipelineStatusKind>": {
    "Option": "PipelineStatusKind"
  },
  "Option<RoleId>": {
    "Option": "RoleId"
  },
  "Option<String>": {
    "Option": "String"
  },
  "Option<TimeInterval>": {
    "Option": "TimeInterval"
  },
  "Option<TransactionRejectionReason>": {
    "Option": "TransactionRejectionReason"
  },
  "Option<TriggerCompletedOutcomeType>": {
    "Option": "TriggerCompletedOutcomeType"
  },
  "Option<TriggerId>": {
    "Option": "TriggerId"
  },
  "Option<u32>": {
    "Option": "u32"
  },
  "Parameter": {
    "Struct": [
      {
        "name": "id",
        "type": "ParameterId"
      },
      {
        "name": "val",
        "type": "ParameterValueBox"
      }
    ]
  },
  "ParameterId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "ParameterValueBox": {
    "Enum": [
      {
        "tag": "TransactionLimits",
        "discriminant": 0,
        "type": "TransactionLimits"
      },
      {
        "tag": "MetadataLimits",
        "discriminant": 1,
        "type": "Limits"
      },
      {
        "tag": "LengthLimits",
        "discriminant": 2,
        "type": "LengthLimits"
      },
      {
        "tag": "Numeric",
        "discriminant": 3,
        "type": "Numeric"
      }
    ]
  },
  "Peer": {
    "Struct": [
      {
        "name": "id",
        "type": "PeerId"
      }
    ]
  },
  "PeerEvent": {
    "Enum": [
      {
        "tag": "Added",
        "discriminant": 0,
        "type": "PeerId"
      },
      {
        "tag": "Removed",
        "discriminant": 1,
        "type": "PeerId"
      }
    ]
  },
  "PeerEventFilter": {
    "Struct": [
      {
        "name": "id_matcher",
        "type": "Option<PeerId>"
      },
      {
        "name": "event_set",
        "type": "PeerEventSet"
      }
    ]
  },
  "PeerEventSet": "u32",
  "PeerId": {
    "Struct": [
      {
        "name": "address",
        "type": "SocketAddr"
      },
      {
        "name": "public_key",
        "type": "PublicKey"
      }
    ]
  },
  "PermissionToken": {
    "Struct": [
      {
        "name": "definition_id",
        "type": "Name"
      },
      {
        "name": "payload",
        "type": "JsonString"
      }
    ]
  },
  "PermissionTokenSchema": {
    "Struct": [
      {
        "name": "token_ids",
        "type": "Vec<Name>"
      },
      {
        "name": "schema",
        "type": "String"
      }
    ]
  },
  "PermissionTokenSchemaUpdateEvent": {
    "Struct": [
      {
        "name": "old_schema",
        "type": "PermissionTokenSchema"
      },
      {
        "name": "new_schema",
        "type": "PermissionTokenSchema"
      }
    ]
  },
  "PipelineEntityKind": {
    "Enum": [
      {
        "tag": "Block",
        "discriminant": 0
      },
      {
        "tag": "Transaction",
        "discriminant": 1
      }
    ]
  },
  "PipelineEvent": {
    "Struct": [
      {
        "name": "entity_kind",
        "type": "PipelineEntityKind"
      },
      {
        "name": "status",
        "type": "PipelineStatus"
      },
      {
        "name": "hash",
        "type": "Hash"
      }
    ]
  },
  "PipelineEventFilter": {
    "Struct": [
      {
        "name": "entity_kind",
        "type": "Option<PipelineEntityKind>"
      },
      {
        "name": "status_kind",
        "type": "Option<PipelineStatusKind>"
      },
      {
        "name": "hash",
        "type": "Option<Hash>"
      }
    ]
  },
  "PipelineRejectionReason": {
    "Enum": [
      {
        "tag": "Block",
        "discriminant": 0,
        "type": "BlockRejectionReason"
      },
      {
        "tag": "Transaction",
        "discriminant": 1,
        "type": "TransactionRejectionReason"
      }
    ]
  },
  "PipelineStatus": {
    "Enum": [
      {
        "tag": "Validating",
        "discriminant": 0
      },
      {
        "tag": "Rejected",
        "discriminant": 1,
        "type": "PipelineRejectionReason"
      },
      {
        "tag": "Committed",
        "discriminant": 2
      }
    ]
  },
  "PipelineStatusKind": {
    "Enum": [
      {
        "tag": "Validating",
        "discriminant": 0
      },
      {
        "tag": "Rejected",
        "discriminant": 1
      },
      {
        "tag": "Committed",
        "discriminant": 2
      }
    ]
  },
  "PublicKey": {
    "Struct": [
      {
        "name": "algorithm",
        "type": "Algorithm"
      },
      {
        "name": "payload",
        "type": "Vec<u8>"
      }
    ]
  },
  "QueryBox": {
    "Enum": [
      {
        "tag": "FindAllAccounts",
        "discriminant": 0,
        "type": "FindAllAccounts"
      },
      {
        "tag": "FindAccountById",
        "discriminant": 1,
        "type": "FindAccountById"
      },
      {
        "tag": "FindAccountKeyValueByIdAndKey",
        "discriminant": 2,
        "type": "FindAccountKeyValueByIdAndKey"
      },
      {
        "tag": "FindAccountsByDomainId",
        "discriminant": 3,
        "type": "FindAccountsByDomainId"
      },
      {
        "tag": "FindAccountsWithAsset",
        "discriminant": 4,
        "type": "FindAccountsWithAsset"
      },
      {
        "tag": "FindAllAssets",
        "discriminant": 5,
        "type": "FindAllAssets"
      },
      {
        "tag": "FindAllAssetsDefinitions",
        "discriminant": 6,
        "type": "FindAllAssetsDefinitions"
      },
      {
        "tag": "FindAssetById",
        "discriminant": 7,
        "type": "FindAssetById"
      },
      {
        "tag": "FindAssetDefinitionById",
        "discriminant": 8,
        "type": "FindAssetDefinitionById"
      },
      {
        "tag": "FindAssetsByName",
        "discriminant": 9,
        "type": "FindAssetsByName"
      },
      {
        "tag": "FindAssetsByAccountId",
        "discriminant": 10,
        "type": "FindAssetsByAccountId"
      },
      {
        "tag": "FindAssetsByAssetDefinitionId",
        "discriminant": 11,
        "type": "FindAssetsByAssetDefinitionId"
      },
      {
        "tag": "FindAssetsByDomainId",
        "discriminant": 12,
        "type": "FindAssetsByDomainId"
      },
      {
        "tag": "FindAssetsByDomainIdAndAssetDefinitionId",
        "discriminant": 13,
        "type": "FindAssetsByDomainIdAndAssetDefinitionId"
      },
      {
        "tag": "FindAssetQuantityById",
        "discriminant": 14,
        "type": "FindAssetQuantityById"
      },
      {
        "tag": "FindTotalAssetQuantityByAssetDefinitionId",
        "discriminant": 15,
        "type": "FindTotalAssetQuantityByAssetDefinitionId"
      },
      {
        "tag": "FindAssetKeyValueByIdAndKey",
        "discriminant": 16,
        "type": "FindAssetKeyValueByIdAndKey"
      },
      {
        "tag": "FindAssetDefinitionKeyValueByIdAndKey",
        "discriminant": 17,
        "type": "FindAssetDefinitionKeyValueByIdAndKey"
      },
      {
        "tag": "FindAllDomains",
        "discriminant": 18,
        "type": "FindAllDomains"
      },
      {
        "tag": "FindDomainById",
        "discriminant": 19,
        "type": "FindDomainById"
      },
      {
        "tag": "FindDomainKeyValueByIdAndKey",
        "discriminant": 20,
        "type": "FindDomainKeyValueByIdAndKey"
      },
      {
        "tag": "FindAllPeers",
        "discriminant": 21,
        "type": "FindAllPeers"
      },
      {
        "tag": "FindAllBlocks",
        "discriminant": 22,
        "type": "FindAllBlocks"
      },
      {
        "tag": "FindAllBlockHeaders",
        "discriminant": 23,
        "type": "FindAllBlockHeaders"
      },
      {
        "tag": "FindBlockHeaderByHash",
        "discriminant": 24,
        "type": "FindBlockHeaderByHash"
      },
      {
        "tag": "FindAllTransactions",
        "discriminant": 25,
        "type": "FindAllTransactions"
      },
      {
        "tag": "FindTransactionsByAccountId",
        "discriminant": 26,
        "type": "FindTransactionsByAccountId"
      },
      {
        "tag": "FindTransactionByHash",
        "discriminant": 27,
        "type": "FindTransactionByHash"
      },
      {
        "tag": "FindPermissionTokensByAccountId",
        "discriminant": 28,
        "type": "FindPermissionTokensByAccountId"
      },
      {
        "tag": "FindPermissionTokenSchema",
        "discriminant": 29,
        "type": "FindPermissionTokenSchema"
      },
      {
        "tag": "FindAllActiveTriggerIds",
        "discriminant": 30,
        "type": "FindAllActiveTriggerIds"
      },
      {
        "tag": "FindTriggerById",
        "discriminant": 31,
        "type": "FindTriggerById"
      },
      {
        "tag": "FindTriggerKeyValueByIdAndKey",
        "discriminant": 32,
        "type": "FindTriggerKeyValueByIdAndKey"
      },
      {
        "tag": "FindTriggersByDomainId",
        "discriminant": 33,
        "type": "FindTriggersByDomainId"
      },
      {
        "tag": "FindAllRoles",
        "discriminant": 34,
        "type": "FindAllRoles"
      },
      {
        "tag": "FindAllRoleIds",
        "discriminant": 35,
        "type": "FindAllRoleIds"
      },
      {
        "tag": "FindRoleByRoleId",
        "discriminant": 36,
        "type": "FindRoleByRoleId"
      },
      {
        "tag": "FindRolesByAccountId",
        "discriminant": 37,
        "type": "FindRolesByAccountId"
      },
      {
        "tag": "FindAllParameters",
        "discriminant": 38,
        "type": "FindAllParameters"
      }
    ]
  },
  "QueryExecutionFail": {
    "Enum": [
      {
        "tag": "Signature",
        "discriminant": 0,
        "type": "String"
      },
      {
        "tag": "Find",
        "discriminant": 1,
        "type": "FindError"
      },
      {
        "tag": "Conversion",
        "discriminant": 2,
        "type": "String"
      },
      {
        "tag": "UnknownCursor",
        "discriminant": 3
      },
      {
        "tag": "FetchSizeTooBig",
        "discriminant": 4
      }
    ]
  },
  "QueryOutputBox": {
    "Enum": [
      {
        "tag": "Id",
        "discriminant": 0,
        "type": "IdBox"
      },
      {
        "tag": "Identifiable",
        "discriminant": 1,
        "type": "IdentifiableBox"
      },
      {
        "tag": "Transaction",
        "discriminant": 2,
        "type": "TransactionQueryOutput"
      },
      {
        "tag": "PermissionToken",
        "discriminant": 3,
        "type": "PermissionToken"
      },
      {
        "tag": "PermissionTokenSchema",
        "discriminant": 4,
        "type": "PermissionTokenSchema"
      },
      {
        "tag": "LimitedMetadata",
        "discriminant": 5,
        "type": "MetadataValueBox"
      },
      {
        "tag": "Numeric",
        "discriminant": 6,
        "type": "Numeric"
      },
      {
        "tag": "BlockHeader",
        "discriminant": 7,
        "type": "BlockHeader"
      },
      {
        "tag": "Block",
        "discriminant": 8,
        "type": "SignedBlock"
      },
      {
        "tag": "Vec",
        "discriminant": 9,
        "type": "Vec<QueryOutputBox>"
      }
    ]
  },
  "QueryOutputPredicate": {
    "Enum": [
      {
        "tag": "Identifiable",
        "discriminant": 0,
        "type": "StringPredicate"
      },
      {
        "tag": "Container",
        "discriminant": 1,
        "type": "Container"
      },
      {
        "tag": "Display",
        "discriminant": 2,
        "type": "StringPredicate"
      },
      {
        "tag": "Numerical",
        "discriminant": 3,
        "type": "SemiRange"
      },
      {
        "tag": "TimeStamp",
        "discriminant": 4,
        "type": "SemiInterval<u128>"
      },
      {
        "tag": "Pass",
        "discriminant": 5
      }
    ]
  },
  "QueryPayload": {
    "Struct": [
      {
        "name": "authority",
        "type": "AccountId"
      },
      {
        "name": "query",
        "type": "QueryBox"
      },
      {
        "name": "filter",
        "type": "GenericPredicateBox<QueryOutputPredicate>"
      }
    ]
  },
  "Register<Account>": {
    "Struct": [
      {
        "name": "object",
        "type": "NewAccount"
      }
    ]
  },
  "Register<Asset>": {
    "Struct": [
      {
        "name": "object",
        "type": "Asset"
      }
    ]
  },
  "Register<AssetDefinition>": {
    "Struct": [
      {
        "name": "object",
        "type": "NewAssetDefinition"
      }
    ]
  },
  "Register<Domain>": {
    "Struct": [
      {
        "name": "object",
        "type": "NewDomain"
      }
    ]
  },
  "Register<Peer>": {
    "Struct": [
      {
        "name": "object",
        "type": "Peer"
      }
    ]
  },
  "Register<Role>": {
    "Struct": [
      {
        "name": "object",
        "type": "NewRole"
      }
    ]
  },
  "Register<Trigger>": {
    "Struct": [
      {
        "name": "object",
        "type": "Trigger"
      }
    ]
  },
  "RegisterBox": {
    "Enum": [
      {
        "tag": "Peer",
        "discriminant": 0,
        "type": "Register<Peer>"
      },
      {
        "tag": "Domain",
        "discriminant": 1,
        "type": "Register<Domain>"
      },
      {
        "tag": "Account",
        "discriminant": 2,
        "type": "Register<Account>"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 3,
        "type": "Register<AssetDefinition>"
      },
      {
        "tag": "Asset",
        "discriminant": 4,
        "type": "Register<Asset>"
      },
      {
        "tag": "Role",
        "discriminant": 5,
        "type": "Register<Role>"
      },
      {
        "tag": "Trigger",
        "discriminant": 6,
        "type": "Register<Trigger>"
      }
    ]
  },
  "RemoveKeyValue<Account>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AccountId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "RemoveKeyValue<Asset>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AssetId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "RemoveKeyValue<AssetDefinition>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "RemoveKeyValue<Domain>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "DomainId"
      },
      {
        "name": "key",
        "type": "Name"
      }
    ]
  },
  "RemoveKeyValueBox": {
    "Enum": [
      {
        "tag": "Domain",
        "discriminant": 0,
        "type": "RemoveKeyValue<Domain>"
      },
      {
        "tag": "Account",
        "discriminant": 1,
        "type": "RemoveKeyValue<Account>"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 2,
        "type": "RemoveKeyValue<AssetDefinition>"
      },
      {
        "tag": "Asset",
        "discriminant": 3,
        "type": "RemoveKeyValue<Asset>"
      }
    ]
  },
  "Repeats": {
    "Enum": [
      {
        "tag": "Indefinitely",
        "discriminant": 0
      },
      {
        "tag": "Exactly",
        "discriminant": 1,
        "type": "u32"
      }
    ]
  },
  "RepetitionError": {
    "Struct": [
      {
        "name": "instruction_type",
        "type": "InstructionType"
      },
      {
        "name": "id",
        "type": "IdBox"
      }
    ]
  },
  "Revoke<PermissionToken, Account>": {
    "Struct": [
      {
        "name": "object",
        "type": "PermissionToken"
      },
      {
        "name": "destination_id",
        "type": "AccountId"
      }
    ]
  },
  "Revoke<PermissionToken, Role>": {
    "Struct": [
      {
        "name": "object",
        "type": "PermissionToken"
      },
      {
        "name": "destination_id",
        "type": "RoleId"
      }
    ]
  },
  "Revoke<RoleId, Account>": {
    "Struct": [
      {
        "name": "object",
        "type": "RoleId"
      },
      {
        "name": "destination_id",
        "type": "AccountId"
      }
    ]
  },
  "RevokeBox": {
    "Enum": [
      {
        "tag": "PermissionToken",
        "discriminant": 0,
        "type": "Revoke<PermissionToken, Account>"
      },
      {
        "tag": "Role",
        "discriminant": 1,
        "type": "Revoke<RoleId, Account>"
      },
      {
        "tag": "RolePermissionToken",
        "discriminant": 2,
        "type": "Revoke<PermissionToken, Role>"
      }
    ]
  },
  "Role": {
    "Struct": [
      {
        "name": "id",
        "type": "RoleId"
      },
      {
        "name": "permissions",
        "type": "SortedVec<PermissionToken>"
      }
    ]
  },
  "RoleEvent": {
    "Enum": [
      {
        "tag": "Created",
        "discriminant": 0,
        "type": "Role"
      },
      {
        "tag": "Deleted",
        "discriminant": 1,
        "type": "RoleId"
      },
      {
        "tag": "PermissionRemoved",
        "discriminant": 2,
        "type": "RolePermissionChanged"
      },
      {
        "tag": "PermissionAdded",
        "discriminant": 3,
        "type": "RolePermissionChanged"
      }
    ]
  },
  "RoleEventFilter": {
    "Struct": [
      {
        "name": "id_matcher",
        "type": "Option<RoleId>"
      },
      {
        "name": "event_set",
        "type": "RoleEventSet"
      }
    ]
  },
  "RoleEventSet": "u32",
  "RoleId": {
    "Struct": [
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "RolePermissionChanged": {
    "Struct": [
      {
        "name": "role_id",
        "type": "RoleId"
      },
      {
        "name": "permission_token_id",
        "type": "Name"
      }
    ]
  },
  "Schedule": {
    "Struct": [
      {
        "name": "start",
        "type": "Duration"
      },
      {
        "name": "period",
        "type": "Option<Duration>"
      }
    ]
  },
  "SemiInterval<Numeric>": {
    "Struct": [
      {
        "name": "start",
        "type": "Numeric"
      },
      {
        "name": "limit",
        "type": "Numeric"
      }
    ]
  },
  "SemiInterval<u128>": {
    "Struct": [
      {
        "name": "start",
        "type": "u128"
      },
      {
        "name": "limit",
        "type": "u128"
      }
    ]
  },
  "SemiRange": {
    "Enum": [
      {
        "tag": "Numeric",
        "discriminant": 0,
        "type": "SemiInterval<Numeric>"
      }
    ]
  },
  "SetKeyValue<Account>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AccountId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "MetadataValueBox"
      }
    ]
  },
  "SetKeyValue<Asset>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AssetId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "MetadataValueBox"
      }
    ]
  },
  "SetKeyValue<AssetDefinition>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AssetDefinitionId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "MetadataValueBox"
      }
    ]
  },
  "SetKeyValue<Domain>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "DomainId"
      },
      {
        "name": "key",
        "type": "Name"
      },
      {
        "name": "value",
        "type": "MetadataValueBox"
      }
    ]
  },
  "SetKeyValueBox": {
    "Enum": [
      {
        "tag": "Domain",
        "discriminant": 0,
        "type": "SetKeyValue<Domain>"
      },
      {
        "tag": "Account",
        "discriminant": 1,
        "type": "SetKeyValue<Account>"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 2,
        "type": "SetKeyValue<AssetDefinition>"
      },
      {
        "tag": "Asset",
        "discriminant": 3,
        "type": "SetKeyValue<Asset>"
      }
    ]
  },
  "SetParameter": {
    "Struct": [
      {
        "name": "parameter",
        "type": "Parameter"
      }
    ]
  },
  "Signature": {
    "Struct": [
      {
        "name": "public_key",
        "type": "PublicKey"
      },
      {
        "name": "payload",
        "type": "Vec<u8>"
      }
    ]
  },
  "SignatureOf<BlockPayload>": "Signature",
  "SignatureOf<QueryPayload>": "Signature",
  "SignatureOf<TransactionPayload>": "Signature",
  "SignaturesOf<BlockPayload>": {
    "Struct": [
      {
        "name": "signatures",
        "type": "SortedVec<SignatureOf<BlockPayload>>"
      }
    ]
  },
  "SignedBlock": {
    "Enum": [
      {
        "tag": "V1",
        "discriminant": 1,
        "type": "SignedBlockV1"
      }
    ]
  },
  "SignedBlockV1": {
    "Struct": [
      {
        "name": "signatures",
        "type": "SignaturesOf<BlockPayload>"
      },
      {
        "name": "payload",
        "type": "BlockPayload"
      }
    ]
  },
  "SignedQuery": {
    "Enum": [
      {
        "tag": "V1",
        "discriminant": 1,
        "type": "SignedQueryV1"
      }
    ]
  },
  "SignedQueryV1": {
    "Struct": [
      {
        "name": "signature",
        "type": "SignatureOf<QueryPayload>"
      },
      {
        "name": "payload",
        "type": "QueryPayload"
      }
    ]
  },
  "SignedTransaction": {
    "Enum": [
      {
        "tag": "V1",
        "discriminant": 1,
        "type": "SignedTransactionV1"
      }
    ]
  },
  "SignedTransactionV1": {
    "Struct": [
      {
        "name": "signature",
        "type": "SignatureOf<TransactionPayload>"
      },
      {
        "name": "payload",
        "type": "TransactionPayload"
      }
    ]
  },
  "SizeError": {
    "Struct": [
      {
        "name": "limits",
        "type": "Limits"
      },
      {
        "name": "actual",
        "type": "u64"
      }
    ]
  },
  "SocketAddr": {
    "Enum": [
      {
        "tag": "Ipv4",
        "discriminant": 0,
        "type": "SocketAddrV4"
      },
      {
        "tag": "Ipv6",
        "discriminant": 1,
        "type": "SocketAddrV6"
      },
      {
        "tag": "Host",
        "discriminant": 2,
        "type": "SocketAddrHost"
      }
    ]
  },
  "SocketAddrHost": {
    "Struct": [
      {
        "name": "host",
        "type": "String"
      },
      {
        "name": "port",
        "type": "u16"
      }
    ]
  },
  "SocketAddrV4": {
    "Struct": [
      {
        "name": "ip",
        "type": "Ipv4Addr"
      },
      {
        "name": "port",
        "type": "u16"
      }
    ]
  },
  "SocketAddrV6": {
    "Struct": [
      {
        "name": "ip",
        "type": "Ipv6Addr"
      },
      {
        "name": "port",
        "type": "u16"
      }
    ]
  },
  "SortedMap<AccountId, Account>": {
    "Map": {
      "key": "AccountId",
      "value": "Account"
    }
  },
  "SortedMap<AssetDefinitionId, AssetDefinition>": {
    "Map": {
      "key": "AssetDefinitionId",
      "value": "AssetDefinition"
    }
  },
  "SortedMap<AssetDefinitionId, Numeric>": {
    "Map": {
      "key": "AssetDefinitionId",
      "value": "Numeric"
    }
  },
  "SortedMap<AssetId, Asset>": {
    "Map": {
      "key": "AssetId",
      "value": "Asset"
    }
  },
  "SortedMap<Name, MetadataValueBox>": {
    "Map": {
      "key": "Name",
      "value": "MetadataValueBox"
    }
  },
  "SortedVec<PermissionToken>": {
    "Vec": "PermissionToken"
  },
  "SortedVec<SignatureOf<BlockPayload>>": {
    "Vec": "SignatureOf<BlockPayload>"
  },
  "String": "String",
  "StringPredicate": {
    "Enum": [
      {
        "tag": "Contains",
        "discriminant": 0,
        "type": "String"
      },
      {
        "tag": "StartsWith",
        "discriminant": 1,
        "type": "String"
      },
      {
        "tag": "EndsWith",
        "discriminant": 2,
        "type": "String"
      },
      {
        "tag": "Is",
        "discriminant": 3,
        "type": "String"
      }
    ]
  },
  "TimeEvent": {
    "Struct": [
      {
        "name": "prev_interval",
        "type": "Option<TimeInterval>"
      },
      {
        "name": "interval",
        "type": "TimeInterval"
      }
    ]
  },
  "TimeEventFilter": "ExecutionTime",
  "TimeInterval": {
    "Struct": [
      {
        "name": "since",
        "type": "Duration"
      },
      {
        "name": "length",
        "type": "Duration"
      }
    ]
  },
  "TransactionLimitError": {
    "Struct": [
      {
        "name": "reason",
        "type": "String"
      }
    ]
  },
  "TransactionLimits": {
    "Struct": [
      {
        "name": "max_instruction_number",
        "type": "u64"
      },
      {
        "name": "max_wasm_size_bytes",
        "type": "u64"
      }
    ]
  },
  "TransactionPayload": {
    "Struct": [
      {
        "name": "chain_id",
        "type": "ChainId"
      },
      {
        "name": "creation_time_ms",
        "type": "u64"
      },
      {
        "name": "authority",
        "type": "AccountId"
      },
      {
        "name": "instructions",
        "type": "Executable"
      },
      {
        "name": "time_to_live_ms",
        "type": "Option<NonZero<u64>>"
      },
      {
        "name": "nonce",
        "type": "Option<NonZero<u32>>"
      },
      {
        "name": "metadata",
        "type": "SortedMap<Name, MetadataValueBox>"
      }
    ]
  },
  "TransactionQueryOutput": {
    "Struct": [
      {
        "name": "block_hash",
        "type": "HashOf<SignedBlock>"
      },
      {
        "name": "transaction",
        "type": "TransactionValue"
      }
    ]
  },
  "TransactionRejectionReason": {
    "Enum": [
      {
        "tag": "AccountDoesNotExist",
        "discriminant": 0,
        "type": "FindError"
      },
      {
        "tag": "LimitCheck",
        "discriminant": 1,
        "type": "TransactionLimitError"
      },
      {
        "tag": "Validation",
        "discriminant": 2,
        "type": "ValidationFail"
      },
      {
        "tag": "InstructionExecution",
        "discriminant": 3,
        "type": "InstructionExecutionFail"
      },
      {
        "tag": "WasmExecution",
        "discriminant": 4,
        "type": "WasmExecutionFail"
      },
      {
        "tag": "Expired",
        "discriminant": 5
      }
    ]
  },
  "TransactionValue": {
    "Struct": [
      {
        "name": "value",
        "type": "SignedTransaction"
      },
      {
        "name": "error",
        "type": "Option<TransactionRejectionReason>"
      }
    ]
  },
  "Transfer<Account, AssetDefinitionId, Account>": {
    "Struct": [
      {
        "name": "source_id",
        "type": "AccountId"
      },
      {
        "name": "object",
        "type": "AssetDefinitionId"
      },
      {
        "name": "destination_id",
        "type": "AccountId"
      }
    ]
  },
  "Transfer<Account, DomainId, Account>": {
    "Struct": [
      {
        "name": "source_id",
        "type": "AccountId"
      },
      {
        "name": "object",
        "type": "DomainId"
      },
      {
        "name": "destination_id",
        "type": "AccountId"
      }
    ]
  },
  "Transfer<Asset, Metadata, Account>": {
    "Struct": [
      {
        "name": "source_id",
        "type": "AssetId"
      },
      {
        "name": "object",
        "type": "Metadata"
      },
      {
        "name": "destination_id",
        "type": "AccountId"
      }
    ]
  },
  "Transfer<Asset, Numeric, Account>": {
    "Struct": [
      {
        "name": "source_id",
        "type": "AssetId"
      },
      {
        "name": "object",
        "type": "Numeric"
      },
      {
        "name": "destination_id",
        "type": "AccountId"
      }
    ]
  },
  "TransferBox": {
    "Enum": [
      {
        "tag": "Domain",
        "discriminant": 0,
        "type": "Transfer<Account, DomainId, Account>"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 1,
        "type": "Transfer<Account, AssetDefinitionId, Account>"
      },
      {
        "tag": "Asset",
        "discriminant": 2,
        "type": "AssetTransferBox"
      }
    ]
  },
  "Trigger": {
    "Struct": [
      {
        "name": "id",
        "type": "TriggerId"
      },
      {
        "name": "action",
        "type": "Action"
      }
    ]
  },
  "TriggerCompletedEvent": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "TriggerId"
      },
      {
        "name": "outcome",
        "type": "TriggerCompletedOutcome"
      }
    ]
  },
  "TriggerCompletedEventFilter": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "Option<TriggerId>"
      },
      {
        "name": "outcome_type",
        "type": "Option<TriggerCompletedOutcomeType>"
      }
    ]
  },
  "TriggerCompletedOutcome": {
    "Enum": [
      {
        "tag": "Success",
        "discriminant": 0
      },
      {
        "tag": "Failure",
        "discriminant": 1,
        "type": "String"
      }
    ]
  },
  "TriggerCompletedOutcomeType": {
    "Enum": [
      {
        "tag": "Success",
        "discriminant": 0
      },
      {
        "tag": "Failure",
        "discriminant": 1
      }
    ]
  },
  "TriggerEvent": {
    "Enum": [
      {
        "tag": "Created",
        "discriminant": 0,
        "type": "TriggerId"
      },
      {
        "tag": "Deleted",
        "discriminant": 1,
        "type": "TriggerId"
      },
      {
        "tag": "Extended",
        "discriminant": 2,
        "type": "TriggerNumberOfExecutionsChanged"
      },
      {
        "tag": "Shortened",
        "discriminant": 3,
        "type": "TriggerNumberOfExecutionsChanged"
      }
    ]
  },
  "TriggerEventFilter": {
    "Struct": [
      {
        "name": "id_matcher",
        "type": "Option<TriggerId>"
      },
      {
        "name": "event_set",
        "type": "TriggerEventSet"
      }
    ]
  },
  "TriggerEventSet": "u32",
  "TriggerId": {
    "Struct": [
      {
        "name": "domain_id",
        "type": "Option<DomainId>"
      },
      {
        "name": "name",
        "type": "Name"
      }
    ]
  },
  "TriggerNumberOfExecutionsChanged": {
    "Struct": [
      {
        "name": "trigger_id",
        "type": "TriggerId"
      },
      {
        "name": "by",
        "type": "u32"
      }
    ]
  },
  "TriggeringEventFilterBox": {
    "Enum": [
      {
        "tag": "Pipeline",
        "discriminant": 0,
        "type": "PipelineEventFilter"
      },
      {
        "tag": "Data",
        "discriminant": 1,
        "type": "DataEventFilter"
      },
      {
        "tag": "Time",
        "discriminant": 2,
        "type": "TimeEventFilter"
      },
      {
        "tag": "ExecuteTrigger",
        "discriminant": 3,
        "type": "ExecuteTriggerEventFilter"
      }
    ]
  },
  "TypeError": {
    "Enum": [
      {
        "tag": "AssetValueType",
        "discriminant": 0,
        "type": "Mismatch<AssetValueType>"
      },
      {
        "tag": "NumericAssetValueTypeExpected",
        "discriminant": 1,
        "type": "AssetValueType"
      },
      {
        "tag": "StoreAssetValueTypeExpected",
        "discriminant": 2,
        "type": "AssetValueType"
      }
    ]
  },
  "Unregister<Account>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AccountId"
      }
    ]
  },
  "Unregister<Asset>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AssetId"
      }
    ]
  },
  "Unregister<AssetDefinition>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "AssetDefinitionId"
      }
    ]
  },
  "Unregister<Domain>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "DomainId"
      }
    ]
  },
  "Unregister<Peer>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "PeerId"
      }
    ]
  },
  "Unregister<Role>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "RoleId"
      }
    ]
  },
  "Unregister<Trigger>": {
    "Struct": [
      {
        "name": "object_id",
        "type": "TriggerId"
      }
    ]
  },
  "UnregisterBox": {
    "Enum": [
      {
        "tag": "Peer",
        "discriminant": 0,
        "type": "Unregister<Peer>"
      },
      {
        "tag": "Domain",
        "discriminant": 1,
        "type": "Unregister<Domain>"
      },
      {
        "tag": "Account",
        "discriminant": 2,
        "type": "Unregister<Account>"
      },
      {
        "tag": "AssetDefinition",
        "discriminant": 3,
        "type": "Unregister<AssetDefinition>"
      },
      {
        "tag": "Asset",
        "discriminant": 4,
        "type": "Unregister<Asset>"
      },
      {
        "tag": "Role",
        "discriminant": 5,
        "type": "Unregister<Role>"
      },
      {
        "tag": "Trigger",
        "discriminant": 6,
        "type": "Unregister<Trigger>"
      }
    ]
  },
  "Upgrade": {
    "Struct": [
      {
        "name": "executor",
        "type": "Executor"
      }
    ]
  },
  "ValidationFail": {
    "Enum": [
      {
        "tag": "NotPermitted",
        "discriminant": 0,
        "type": "String"
      },
      {
        "tag": "InstructionFailed",
        "discriminant": 1,
        "type": "InstructionExecutionError"
      },
      {
        "tag": "QueryFailed",
        "discriminant": 2,
        "type": "QueryExecutionFail"
      },
      {
        "tag": "TooComplex",
        "discriminant": 3
      },
      {
        "tag": "InternalError",
        "discriminant": 4
      }
    ]
  },
  "Vec<Event>": {
    "Vec": "Event"
  },
  "Vec<GenericPredicateBox<QueryOutputPredicate>>": {
    "Vec": "GenericPredicateBox<QueryOutputPredicate>"
  },
  "Vec<InstructionBox>": {
    "Vec": "InstructionBox"
  },
  "Vec<MetadataValueBox>": {
    "Vec": "MetadataValueBox"
  },
  "Vec<Name>": {
    "Vec": "Name"
  },
  "Vec<PeerId>": {
    "Vec": "PeerId"
  },
  "Vec<QueryOutputBox>": {
    "Vec": "QueryOutputBox"
  },
  "Vec<TransactionValue>": {
    "Vec": "TransactionValue"
  },
  "Vec<u8>": {
    "Vec": "u8"
  },
  "WasmExecutionFail": {
    "Struct": [
      {
        "name": "reason",
        "type": "String"
      }
    ]
  },
  "WasmSmartContract": "Vec<u8>",
  "bool": "bool",
  "u128": {
    "Int": "FixedWidth"
  },
  "u16": {
    "Int": "FixedWidth"
  },
  "u32": {
    "Int": "FixedWidth"
  },
  "u64": {
    "Int": "FixedWidth"
  },
  "u8": {
    "Int": "FixedWidth"
  }
}
